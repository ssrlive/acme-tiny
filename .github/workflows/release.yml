name: Deploy Releases
on:
  push:
    tags:
      - "v*.*.*"
env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc

        include:
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            host_os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            host_os: ubuntu-latest
          - target: x86_64-apple-darwin
            host_os: macos-latest
          - target: aarch64-apple-darwin
            host_os: macos-latest
          - target: x86_64-pc-windows-msvc
            host_os: windows-latest
          - target: i686-pc-windows-msvc
            host_os: windows-latest

    runs-on: ${{ matrix.host_os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Prepare
        if: ${{ !cancelled() }}
        shell: bash
        run: |
          mkdir releasedir
          rustup target add ${{ matrix.target }}
          if [[ "${{ matrix.host_os }}" == "ubuntu-latest" ]]; then
            cargo install cross --git https://github.com/cross-rs/cross --rev 36c0d78
            cross --version
          fi

      - name: Build
        if: ${{ !cancelled() }}
        shell: bash
        run: |
          if [[ "${{ matrix.host_os }}" == "ubuntu-latest" ]]; then
            cross build --all-features --release --target ${{ matrix.target }}
          else
            cargo build --all-features --release --target ${{ matrix.target }}
          fi
          if [[ "${{ matrix.host_os }}" == "windows-latest" ]]; then
            powershell Compress-Archive -Path target/${{ matrix.target }}/release/acme-tiny.exe -DestinationPath releasedir/acme-tiny-${{ matrix.target }}.zip
          elif [[ "${{ matrix.host_os }}" == "macos-latest" ]]; then
            zip -j releasedir/acme-tiny-${{ matrix.target }}.zip target/${{ matrix.target }}/release/acme-tiny
          elif [[ "${{ matrix.host_os }}" == "ubuntu-latest" ]]; then
            zip -j releasedir/acme-tiny-${{ matrix.target }}.zip target/${{ matrix.target }}/release/acme-tiny
          fi

      - name: Upload
        if: ${{ !cancelled() }}
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: releasedir/*

      - name: Abort on error
        if: ${{ failure() }}
        run: echo "Some of jobs failed" && false
